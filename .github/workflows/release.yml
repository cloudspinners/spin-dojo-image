name: Release

on:
  push:
    branches: [ "main" ]
    paths:
      - 'CHANGELOG.md'
    workflow_dispatch:

env:
  TEST_TAG: kiefm/spin-dojo-image-base:test

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          platforms: linux/amd64
          tags: ${{ env.TEST_TAG }}
      -
        name: Install dojo
        run: |
          mkdir -p ./bin
          wget -O ./bin/dojo https://github.com/kudulab/dojo/releases/download/0.11.0/dojo_linux_amd64
          chmod +x ./bin/dojo
      -
        name: Test
        run: |
          echo "DOJO_DOCKER_IMAGE=${{ env.TEST_TAG }}" > ./Dojofile.to_be_tested
          echo "DOJO_IDENTITY_OUTER=./test/integration/identities/full" >> ./Dojofile.to_be_tested
          echo "DOJO_WORK_OUTER=./test/integration/test_dojo_work" >> ./Dojofile.to_be_tested
          ./bin/dojo --docker-options="--platform linux/amd64" \
            -c ./Dojofile.to_be_tested \
            "time bats /opt/spin-dojo/test"
      - 
        name: version
        run: echo "::set-output name=version::$(./tasks get_version)"
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: true
          tags: |
            kiefm/spin-dojo-image-base:latest
            kiefm/spin-dojo-image-base:0.0.21


# jobs:
#   docker:
#     runs-on: ubuntu-latest
#     outputs:
#       version: ${{ steps.version.outputs.version }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Publish package to docker hub
#         env:
#           DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
#           DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#         run: |
#           ./tasks build_local
#           ./tasks release
#           ./tasks publish
#       - name: version
#         run: echo "::set-output name=version::$(./tasks get_version)"

#   release:
#     runs-on: ubuntu-latest
#     needs: docker
#     steps:
#       - name: Create release in github repository
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: v${{needs.docker.outputs.version}}
#           body: |
#             See the CHANGELOG for details
